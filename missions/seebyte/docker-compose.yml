version: '3.7'
services:
  moos_usv:
    image: "herocc/moos-ivp-cc:latest" # you should change this to a specific tag
    stdin_open: true
    tty: true
    init: true
    ports:
      - "9305:9305/udp" # Expose pShare if $SHORE is set
    volumes:
      - "./logs/moos-logs/vehicle/usv:/home/moos/moos-ivp-cc/missions/seebyte/logs"
    environment:
      - MISSION=seebyte
      - COMMUNITY=seebyte_usv
      - LAUNCH_TYPE=vehicle
      - TIME_WARP=1 # 1 is realtime, increase to speed up (use only in simulation)
      - NMEA_HOST=neptune_usv # address / hostname of command server
      - SIM=yes # Set if this is a simulation
      #- VEHICLE_ROUTE=host.docker.internal:9300 # If not a simulation, set this to a pShare route of a vehicle-driver only community. See `example_vehicle/`
      #- HERON_HOST=192.168.10.1 # Ignored if SIM is set, should be IP of heron frontseat
      #- NMEA_PORT=10110 # if not the default (10110), set NMEA host port
      #- NMEA_TIME_DELTA=3 # set max time difference in seconds for incoming commands (default 3, -1 to disable)
      #- NMEA_CHECKSUM=true # should we check incoming command checksum (default true)
      - SHORE_HOST=moos_shoreside # Set to the IP & port of the machine you'd like to be shoreside
      #- SHORE_PORT="9300" # Set to the pShare port of the shoreside machine
      #- HOST_IP=moos-vehicle # Set to the IP where other devices can connect to our pShare (this host's IP, or the container)
      - PSHARE_PORT=9305 # Used to communicate with shoreside (incoming port), you should expose this
      - BROADCAST_MAILS=OBSTACLE_INFORM,OBM_RESOLVED
    networks:
      - moos

  moos_uuv:
    image: "herocc/moos-ivp-cc:latest" # you should change this to a specific tag
    stdin_open: true
    tty: true
    init: true
    ports:
      - "9306:9306/udp"
    volumes:
      - "./logs/moos-logs/vehicle/uuv:/home/moos/moos-ivp-cc/missions/seebyte/logs"
    environment:
      - MISSION=seebyte
      - LAUNCH_TYPE=vehicle
      - NMEA_HOST=neptune_uuv
      - COMMUNITY=seebyte_uuv
      - SIM=yes
      - SHORE_HOST=moos_shoreside
      - PSHARE_PORT=9306
      # The internal mail key to listen to for obstacles.
      # If the vehicle has no sensing capabilities, set this to an unused mail to disable simulated obstacle sensing
      - OBSTACLE_POINT_KEY=disabled
    networks:
      - moos

  # The shoreside image -- acts as control pane
  moos_shoreside:
    image: "herocc/moos-ivp-cc:latest" # you should change this to a specific tag
    stdin_open: true
    tty: true
    init: true
    ports:
      - "9300:9300/udp"
    volumes:
      - "./logs/moos-logs/shoreside:/home/moos/moos-ivp-cc/missions/seebyte/logs"
      - "${HOME}/.Xauthority:/home/moos/.Xauthority" # If you want to forward X11, and maybe `xhost +`
      - "/tmp/.X11-unix:/tmp/.X11-unix" # same here. Set $DISPLAY below too
    environment:
      - MISSION=seebyte
      - LAUNCH_TYPE=shoreside
      - TIME_WARP=1
      - SIM=yes # Set to enable uFldObstacleSim & related bits.
      #- HOST_IP="moos-shoreside" # Set to the IP where other devices can connect to our pShare (usually host's IP)
      #- PSHARE_PORT="9300" # Used to communicate with shoreside (incoming port), you should expose this
      #- DISPLAY=host.docker.internal:0 # Display X11 on Docker Desktop (w/ Mac XQuarts)
      #- DISPLAY # Use this one on linux
    networks:
      - moos

  neptune_usv:
    # Wait ~1m, then `docker exec -it seebyte_neptune_usv_1 bash -ic 'rosservice call /<$CONFIG_TYPE>/seebyte_arbiter/control "{enable: 1, running: 1}"'`
    image: "seebyte-dkr.docker.seebyte.com/onrmit-neptune-amd64:beta"
    command: ["/opt/seebyte/docker/entrypoint.sh"]
    init: true
    ports:
      - "10110:10110"
    volumes:
      - "./logs/neptune-logs/usv:/home/neptune/seebyte/seebyte_neptune/logs"
      #- "./mission.kml:/home/neptune/seebyte/seebyte_neptune/data/mission.kml:ro"
      #- "./moos_bridge.json:/home/neptune/seebyte/seebyte_neptune/config/moos_bridge.json"
    environment:
      - CONFIG_TYPE=usv-philos
      - NPTN_ID=usv_philos
      - SOLAR_VEHICLE_NAME=usv_philos
      - ROSCONSOLE_STDOUT_LINE_BUFFERED=1
      - NEPTUNE_BROADCAST_IP=${NEPTUNE_IP}
    networks:
      neptune_net:
        ipv4_address: ${NEPTUNE_IP}
      moos:

  neptune_uuv:
    image: "seebyte-dkr.docker.seebyte.com/onrmit-neptune-amd64:beta"
    command: ["/opt/seebyte/docker/entrypoint.sh"]
    init: true
    ports:
      - "10111:10110"
    volumes:
      - "./logs/neptune-logs/uuv:/home/neptune/seebyte/seebyte_neptune/logs"
    environment:
      - CONFIG_TYPE=usv-heron
      - NPTN_ID=usv_heron
      - SOLAR_VEHICLE_NAME=usv_heron
      - ROSCONSOLE_STDOUT_LINE_BUFFERED=1
    networks:
      moos:

networks:
  moos:
  neptune_net:
    driver: macvlan
    #driver_opts: # When running with a real Neptune Topside, you should uncomment this and update .env to match
    #  parent: ${HOST_NETWORK_ADAPTER}
    ipam:
      config:
        - subnet: ${HOST_NETWORK_SUBNET}
