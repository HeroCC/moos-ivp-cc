//-------------------------------------------------
// NAME: C. Cesar, MIT CSAIL
//-------------------------------------------------
ServerHost   = localhost
ServerPort   = $(DB_PORT)
Community    = $(COMMUNITY)
MOOSTimeWarp = $(WARP)

#include plug_origin_warp.moos

//------------------------------------------
// Antler configuration block
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  // Essentials
  Run = MOOSDB           @ NewConsole = false
  Run = pLogger          @ NewConsole = false
  Run = uProcessWatch    @ NewConsole = false
  Run = pNodeReporter    @ NewConsole = false
  Run = pHostInfo        @ NewConsole = false

  // Simulation
  #ifdef SIM
    Run = uSimMarine       @ NewConsole = false
  #endif

  // Autonomy
  Run = pMarinePID       @ NewConsole = false
  Run = pHelmIvP         @ NewConsole = false
  Run = pObstacleMgr     @ NewConsole = false

  // Visualization and Multi-Vehicle communications
  Run = pShare          @ NewConsole = false
  #ifdef SHORE
    // If shore is defined, enable pShare and the broker for comms
    Run = pRealm          @ NewConsole = false
    Run = uFldNodeBroker  @ NewConsole = false
    Run = uFldMessageHandler @ NewConsole = false
    #ifdef BROADCAST_MAILS
    Run = pAnnounceMail @ NewConsole = false
    #endif
  #endif

  #ifdef DISPLAY
    // If this isn't a headless machine, launch the gui tools
    Run = pRealm           @ NewConsole = false
    Run = pMarineViewer	   @ NewConsole = false
  #endif

  // C&C Interface
  Run = iNeptune         @ NewConsole = false
}

#include plug_shore.moos

//------------------------------------------------
// iNeptune config block

ProcessConfig = iNeptune
{
  AppTick   = 4
  CommsTick = 4

  Port = $(NMEA_PORT)
  Host = $(NMEA_HOST)
  ValidateChecksum = $(NMEA_CHECKSUM)
  MaximumTimeDifference = $(NMEA_TIME_DELTA)
}


//--------------------------------------------------------
ProcessConfig = pObstacleMgr
{
  AppTick   = 4
  CommsTick = 4

  point_var = $(OBSTACLE_POINT_KEY)

  post_view_polys = true

  //max_pts_per_cluster = 100

  //alert_range = 100
  general_alert = update_var=OBSTACLE_INFORM,alert_range=400

  given_max_duration = off
}

//------------------------------------------------------
// uSimMarine Configuration Block

ProcessConfig = uSimMarine
{
  AppTick   = 10
  CommsTick = 10

  //START_POS = $(START_POS)
  PREFIX    = NAV

  //rotate_speed = 0.012
  //drift_x      = 0.0045

  buoyancy_rate        = 0.15
  max_depth_rate       = 5
  max_depth_rate_speed = 2.0

  // Charles River is usually 16-22 feet, 33 at max (thx Tyler & co)
  default_water_depth  = 7

  deprecated_ok = true

  //thrust_map = -100:-2, 0:0, 20:1, 40:2, 60:3, 80:5, 100:5
  //thrust_map = -100:-2, 0:0, 20:1, 40:2, 60:3, 80:5, 100:5
}

ProcessConfig = pMarineViewer
{
  AppTick    = 4
  CommsTick  = 4

	tiff_file            = MIT_SP.tif

  set_pan_x            = -90
  set_pan_y            = -280
  zoom                 = 0.65
  vehicle_shape_scale  = 1.5
  hash_delta           = 50
  hash_shade           = 0.22
  hash_viewable        = true

  trails_point_size   = 1
  vehicles_name_mode = names+depth

  // Appcast configuration
  appcast_height       = 75
  appcast_width        = 30
  appcast_viewable     = true
  appcast_color_scheme = indigo
  nodes_font_size      = medium
  procs_font_size      = medium
  appcast_font_size    = small

  datum_viewable = true
}

//------------------------------------------------------
// pRealm Configuration Block

ProcessConfig = pRealm
{
  AppTick   = 4
  CommsTick = 4

  scope_set = name=neptune, vars=DEPLOY:MOOS_MANUAL_OVERRIDE:NEPTUNE_SURVEY_NEXT_POINT:NEPTUNE_SURVEY_VISITED_POINT
  scope_set = name=neptune, vars=NEPTUNE_SURVEY_TRAVERSE:NEPTUNE_SURVEY_UPDATE:SENT_NMEA:INCOMING_NMEA:GIVEN_OBSTACLE:OBM_RESOLVED
  scope_set = name=neptune, vars=NEPTUNE_SURVEY_DEPTH

}

//---------------------------------------
ProcessConfig = pMarinePID
{
  AppTick    = 10
  CommsTick  = 10

  VERBOSE       = true
  DEPTH_CONTROL = true
  ACTIVE_START  = true

  deprecated_ok = true

  // Yaw PID controller (Set for M300)
  YAW_PID_KP             = 0.35
  YAW_PID_KD             = 0.07
  YAW_PID_KI             = 0.0
  YAW_PID_INTEGRAL_LIMIT = 0.07

  // Speed PID controller
  SPEED_PID_KP           = 1.0
  SPEED_PID_KD           = 0.0
  SPEED_PID_KI           = 0.0
  SPEED_PID_INTEGRAL_LIMIT = 0.07

  // Maximums
  MAXRUDDER  = 100 // 100
  MAXTHRUST  = 84

  // Depth
  maxpitch     = 15
  maxelevator  = 13
  //Pitch PID controller
  pitch_pid_kp                   = 1.5
  pitch_pid_kd                   = 0.3
  pitch_pid_ki                   = 0.004
  pitch_pid_integral_limit       = 0

  //ZPID controller
  z_to_pitch_pid_kp              = 0.12
  z_to_pitch_pid_kd              = 0.1
  z_to_pitch_pid_ki              = 0.004
  z_to_pitch_pid_integral_limit  = 0.05

  // A non-zero SPEED_FACTOR overrides use of SPEED_PID
  // Will set DESIRED_THRUST = DESIRED_SPEED * SPEED_FACTOR
  //SPEED_FACTOR = 20
}

//------------------------------------------
// pLogger config block

ProcessConfig = pLogger
{
  AppTick   = 8
  CommsTick = 8

  AsyncLog = true

  Path = ./logs/
  File = LOG_$(COMMUNITY)

  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request
  Log = IVPHELM_LIFE_EVENT @ 0 NOSYNC
  Log = REPORT @ 0 NOSYNC

  LogAuxSrc = true
  WildCardLogging = true
  WildCardOmitPattern = *_STATUS
  WildCardOmitPattern = DB_VARSUMMARY
  WildCardOmitPattern = DB_RWSUMMARY
  WildCardExclusionLog = true
}

//------------------------------------------
// uProcessWatch

ProcessConfig = uProcessWatch
{
  AppTick   = 4
  CommsTick = 4

  watch_all = true
	nowatch   = uPokeDB*
	nowatch   = uXMS*
}

//------------------------------------------
// pHelmIvP config block

ProcessConfig = pHelmIvP
{
  AppTick    = 4
  CommsTick  = 4

  bhv_dir_not_found_ok = true

  other_override_var = OPERATOR_OVERRIDE

  behaviors  = seebyte.bhv
  domain     = course:0:359:360
  domain     = speed:0:4:41
  domain     = depth:0:100:101
}

//------------------------------------------
// pNodeReporter config block

ProcessConfig = pNodeReporter
{
  AppTick    = 2
  CommsTick	 = 2

  crossfill_policy = fill-empty

  platform_type   = uuv
  platform_color  = yellow
  platform_length = 4
}

//---------------------------------------------------------
// pShare to Shoreside and the Vehicle Driver community

ProcessConfig = pShare
{
  AppTick    = 2
  CommsTick  = 2

  // Shoreside info handled by uFldShoreBroker

  input = route =  localhost:$(PSHARE_PORT)

  // VEHICLE_ROUTE allows this MOOS environment to remain a dockerized / untouched system,
  // Only sharing out the DESIRED_* information to the vehicle
#ifdef VEHICLE_ROUTE
  // Send our DESIRED_* information to the vehicle
  // If it has any NAV_*, or sensor information we require, it should send that back to us
  Output = src_name=DESIRED_*, route=$(VEHICLE_ROUTE)
  Output = src_name=MOOS_MANUAL_OVERRIDE, route=$(VEHICLE_ROUTE)
  Output = src_name=DEPLOY, route=$(VEHICLE_ROUTE)
#endif
}

ProcessConfig = pAnnounceMail
{
  AppTick = 2
  CommsTick = 2

  Broadcast = $(BROADCAST_MAILS)
}
